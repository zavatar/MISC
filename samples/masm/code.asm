; Listing generated by Microsoft (R) Optimizing Compiler Version 17.00.60315.1 

	TITLE	H:\openSource\MISC\samples\masm\code.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_accum
_BSS	SEGMENT
_accum	DD	01H DUP (?)
_BSS	ENDS
PUBLIC	_sum__cdecl
PUBLIC	_sum__stdcall@8
PUBLIC	@sum__fastcall@8
PUBLIC	_sum_vararg
; Function compile flags: /Ogtp
;	COMDAT _sum_vararg
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_sum_vararg PROC					; COMDAT
; File h:\opensource\misc\samples\masm\code.c
; Line 20
	push	ebp
	mov	ebp, esp
; Line 21
	mov	eax, DWORD PTR _y$[ebp+8]
	add	eax, DWORD PTR _y$[ebp+4]
	add	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _y$[ebp]
; Line 22
	add	DWORD PTR _accum, eax
; Line 24
	pop	ebp
	ret	0
_sum_vararg ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT @sum__fastcall@8
_TEXT	SEGMENT
@sum__fastcall@8 PROC					; COMDAT
; _x$ = ecx
; _y$ = edx
; File h:\opensource\misc\samples\masm\code.c
; Line 17
	lea	eax, DWORD PTR [ecx+edx]
	add	DWORD PTR _accum, eax
	ret	0
@sum__fastcall@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _sum__stdcall@8
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_sum__stdcall@8 PROC					; COMDAT
; File h:\opensource\misc\samples\masm\code.c
; Line 14
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _y$[ebp]
	add	DWORD PTR _accum, eax
	pop	ebp
	ret	8
_sum__stdcall@8 ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _sum__cdecl
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_sum__cdecl PROC					; COMDAT
; File h:\opensource\misc\samples\masm\code.c
; Line 11
	push	ebp
	mov	ebp, esp
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _y$[ebp]
	add	DWORD PTR _accum, eax
	pop	ebp
	ret	0
_sum__cdecl ENDP
_TEXT	ENDS
END
