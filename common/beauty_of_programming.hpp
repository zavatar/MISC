//////////////////////////////////////////////////////////////////////////
// 1.1
//

//////////////////////////////////////////////////////////////////////////
// 1.2
// bit-fields of struct
struct {
	unsigned char a:4;
	unsigned char b:4;
};

//////////////////////////////////////////////////////////////////////////
// 1.3
// Pancake sorting
// Finished at most 2n-3 flips, but the minimum number of flips required is NP-hard problem
// http://en.wikipedia.org/wiki/Pancake_sorting

//////////////////////////////////////////////////////////////////////////
// 1.4
// Multi-dimension DP
// C(x1,x2,x3,x4,x5) = min{ C(x1-1,x2,x3,x4,x5)+M1, C(x1-1,x2-1,x3,x4,x5)+M2,
//                      C(x1-1,x2-1,x3-1,x4,x5)+M3, C(x1-1,x2-1,x3-1,x4-1,x5)+M4,
//                      C(x1-1,x2-1,x3-1,x4-1,x5-1)+M5 }

//////////////////////////////////////////////////////////////////////////
// 1.5
// Find lost number in paired numbers
// 1. lost only one, b ^= a[i] or pre-compute sum(a), b = sum(a)-nowsum(a)
// 2. lost two unequal numbers, b ^= a[i], then split a[] by 1-bit of b
// 3. lost two numbers, pre-compute sum(a) and sum(a^2)
//    solve x+y=sum(a)-nowsum(a) and x^2+y^2=sum(a^2)-nowsum(a^2)

//////////////////////////////////////////////////////////////////////////
// 1.6
//

//////////////////////////////////////////////////////////////////////////
// 1.7
//

//////////////////////////////////////////////////////////////////////////
// 1.8
//

//////////////////////////////////////////////////////////////////////////
// 1.9
//

//////////////////////////////////////////////////////////////////////////
// 1.10
//

//////////////////////////////////////////////////////////////////////////
// 1.11
//

//////////////////////////////////////////////////////////////////////////
// 1.12
//

//////////////////////////////////////////////////////////////////////////
// 1.13
//

//////////////////////////////////////////////////////////////////////////
// 1.14
//

//////////////////////////////////////////////////////////////////////////
// 1.15
//

//////////////////////////////////////////////////////////////////////////
// 1.16
//

//////////////////////////////////////////////////////////////////////////
// 1.17
//

//////////////////////////////////////////////////////////////////////////
// 1.18
//

